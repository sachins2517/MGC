<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="13" failed="0" total="14" passed="1">
  <reporter-output>
    <line>
      <![CDATA[TestName: validEmail Status: Pass]]>
    </line>
    <line>
      <![CDATA[TestName: invalidEmail Status: Pass]]>
    </line>
    <line>
      <![CDATA[TestName: regAfterSignOut Status: Pass]]>
    </line>
    <line>
      <![CDATA[TestName: clinicianReg Status: Pass]]>
    </line>
    <line>
      <![CDATA[TestName: labAdminRegistration Status: Pass]]>
    </line>
    <line>
      <![CDATA[TestName: otherRegistration Status: Pass]]>
    </line>
    <line>
      <![CDATA[TestName: paymentWithCard Status: Pass]]>
    </line>
    <line>
      <![CDATA[TestName: paymentWithPaypal Status: Pass]]>
    </line>
    <line>
      <![CDATA[Test: creationOfDDM is Pass]]>
    </line>
    <line>
      <![CDATA[TestName: creationOfDDM Status: Pass]]>
    </line>
    <line>
      <![CDATA[TestName: create_LLR_Request Status: Pass]]>
    </line>
    <line>
      <![CDATA[TestName: create_LLR_jpg Status: Pass]]>
    </line>
    <line>
      <![CDATA[TestName: create_LLR_png Status: Pass]]>
    </line>
    <line>
      <![CDATA[TestName: create_LLR_pdf Status: Pass]]>
    </line>
    <line>
      <![CDATA[TestName: view_LLR_List Status: Pass]]>
    </line>
  </reporter-output>
  <suite name="Suite" duration-ms="650043" started-at="2018-12-11T21:25:23Z" finished-at="2018-12-11T21:36:13Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="650043" started-at="2018-12-11T21:25:23Z" finished-at="2018-12-11T21:36:13Z">
      <class name="script.Clinician_Reg_TC4">
        <test-method status="PASS" signature="openApp(java.lang.String, java.lang.String)[pri:0, instance:script.Clinician_Reg_TC4@523884b2]" name="openApp" is-config="true" duration-ms="40707" started-at="2018-12-12T02:57:36Z" finished-at="2018-12-12T02:58:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[localhost]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method status="SKIP" signature="clinicianReg()[pri:4, instance:script.Clinician_Reg_TC4@523884b2]" name="clinicianReg" duration-ms="4" started-at="2018-12-12T02:58:16Z" finished-at="2018-12-12T02:58:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clinicianReg -->
        <test-method status="PASS" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script.Clinician_Reg_TC4@523884b2]" name="closeApp" is-config="true" duration-ms="1168" started-at="2018-12-12T02:58:16Z" finished-at="2018-12-12T02:58:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=clinicianReg status=SKIP method=Clinician_Reg_TC4.clinicianReg()[pri:4, instance:script.Clinician_Reg_TC4@523884b2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[TestName: clinicianReg Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- script.Clinician_Reg_TC4 -->
      <class name="script.Others_Reg_TC6">
        <test-method status="PASS" signature="openApp(java.lang.String, java.lang.String)[pri:0, instance:script.Others_Reg_TC6@61832929]" name="openApp" is-config="true" duration-ms="41091" started-at="2018-12-12T02:59:12Z" finished-at="2018-12-12T02:59:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[localhost]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method status="SKIP" signature="otherRegistration()[pri:6, instance:script.Others_Reg_TC6@61832929]" name="otherRegistration" duration-ms="4" started-at="2018-12-12T02:59:53Z" finished-at="2018-12-12T02:59:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- otherRegistration -->
        <test-method status="PASS" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script.Others_Reg_TC6@61832929]" name="closeApp" is-config="true" duration-ms="1112" started-at="2018-12-12T02:59:53Z" finished-at="2018-12-12T02:59:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=otherRegistration status=SKIP method=Others_Reg_TC6.otherRegistration()[pri:6, instance:script.Others_Reg_TC6@61832929] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[TestName: otherRegistration Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- script.Others_Reg_TC6 -->
      <class name="script.PaymentWithCard_TC7">
        <test-method status="PASS" signature="openApp(java.lang.String, java.lang.String)[pri:0, instance:script.PaymentWithCard_TC7@29774679]" name="openApp" is-config="true" duration-ms="40063" started-at="2018-12-12T02:59:54Z" finished-at="2018-12-12T03:00:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[localhost]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method status="SKIP" signature="paymentWithCard()[pri:7, instance:script.PaymentWithCard_TC7@29774679]" name="paymentWithCard" duration-ms="4" started-at="2018-12-12T03:00:34Z" finished-at="2018-12-12T03:00:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- paymentWithCard -->
        <test-method status="PASS" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script.PaymentWithCard_TC7@29774679]" name="closeApp" is-config="true" duration-ms="1221" started-at="2018-12-12T03:00:34Z" finished-at="2018-12-12T03:00:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=paymentWithCard status=SKIP method=PaymentWithCard_TC7.paymentWithCard()[pri:7, instance:script.PaymentWithCard_TC7@29774679] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[TestName: paymentWithCard Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- script.PaymentWithCard_TC7 -->
      <class name="script.Create_LLR_Request_JPG_TC10">
        <test-method status="PASS" signature="openApp(java.lang.String, java.lang.String)[pri:0, instance:script.Create_LLR_Request_JPG_TC10@3532ec19]" name="openApp" is-config="true" duration-ms="39957" started-at="2018-12-12T03:03:27Z" finished-at="2018-12-12T03:04:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[localhost]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method status="SKIP" signature="create_LLR_jpg()[pri:10, instance:script.Create_LLR_Request_JPG_TC10@3532ec19]" name="create_LLR_jpg" duration-ms="4" started-at="2018-12-12T03:04:07Z" finished-at="2018-12-12T03:04:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- create_LLR_jpg -->
        <test-method status="PASS" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script.Create_LLR_Request_JPG_TC10@3532ec19]" name="closeApp" is-config="true" duration-ms="1152" started-at="2018-12-12T03:04:07Z" finished-at="2018-12-12T03:04:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=create_LLR_jpg status=SKIP method=Create_LLR_Request_JPG_TC10.create_LLR_jpg()[pri:10, instance:script.Create_LLR_Request_JPG_TC10@3532ec19] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[TestName: create_LLR_jpg Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- script.Create_LLR_Request_JPG_TC10 -->
      <class name="script.Create_LLR_Request_PDF_TC12">
        <test-method status="PASS" signature="openApp(java.lang.String, java.lang.String)[pri:0, instance:script.Create_LLR_Request_PDF_TC12@ae45eb6]" name="openApp" is-config="true" duration-ms="40511" started-at="2018-12-12T03:04:50Z" finished-at="2018-12-12T03:05:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[localhost]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method status="SKIP" signature="create_LLR_pdf()[pri:12, instance:script.Create_LLR_Request_PDF_TC12@ae45eb6]" name="create_LLR_pdf" duration-ms="4" started-at="2018-12-12T03:05:30Z" finished-at="2018-12-12T03:05:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- create_LLR_pdf -->
        <test-method status="PASS" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script.Create_LLR_Request_PDF_TC12@ae45eb6]" name="closeApp" is-config="true" duration-ms="1265" started-at="2018-12-12T03:05:30Z" finished-at="2018-12-12T03:05:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=create_LLR_pdf status=SKIP method=Create_LLR_Request_PDF_TC12.create_LLR_pdf()[pri:12, instance:script.Create_LLR_Request_PDF_TC12@ae45eb6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[TestName: create_LLR_pdf Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- script.Create_LLR_Request_PDF_TC12 -->
      <class name="script.LabAdmin_Reg_TC5">
        <test-method status="PASS" signature="openApp(java.lang.String, java.lang.String)[pri:0, instance:script.LabAdmin_Reg_TC5@5b275dab]" name="openApp" is-config="true" duration-ms="52796" started-at="2018-12-12T02:58:18Z" finished-at="2018-12-12T02:59:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[localhost]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method status="SKIP" signature="labAdminRegistration()[pri:5, instance:script.LabAdmin_Reg_TC5@5b275dab]" name="labAdminRegistration" duration-ms="4" started-at="2018-12-12T02:59:10Z" finished-at="2018-12-12T02:59:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- labAdminRegistration -->
        <test-method status="PASS" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script.LabAdmin_Reg_TC5@5b275dab]" name="closeApp" is-config="true" duration-ms="1104" started-at="2018-12-12T02:59:10Z" finished-at="2018-12-12T02:59:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=labAdminRegistration status=SKIP method=LabAdmin_Reg_TC5.labAdminRegistration()[pri:5, instance:script.LabAdmin_Reg_TC5@5b275dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[TestName: labAdminRegistration Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- script.LabAdmin_Reg_TC5 -->
      <class name="script.Invalid_Email_TC2">
        <test-method status="PASS" signature="openApp(java.lang.String, java.lang.String)[pri:0, instance:script.Invalid_Email_TC2@28d25987]" name="openApp" is-config="true" duration-ms="41652" started-at="2018-12-12T02:56:09Z" finished-at="2018-12-12T02:56:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[localhost]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method status="SKIP" signature="invalidEmail()[pri:2, instance:script.Invalid_Email_TC2@28d25987]" name="invalidEmail" duration-ms="4" started-at="2018-12-12T02:56:50Z" finished-at="2018-12-12T02:56:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidEmail -->
        <test-method status="PASS" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script.Invalid_Email_TC2@28d25987]" name="closeApp" is-config="true" duration-ms="1175" started-at="2018-12-12T02:56:50Z" finished-at="2018-12-12T02:56:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidEmail status=SKIP method=Invalid_Email_TC2.invalidEmail()[pri:2, instance:script.Invalid_Email_TC2@28d25987] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[TestName: invalidEmail Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- script.Invalid_Email_TC2 -->
      <class name="script.Valid_Email_TC1">
        <test-method status="FAIL" signature="openApp(java.lang.String, java.lang.String)[pri:0, instance:script.Valid_Email_TC1@59fa1d9b]" name="openApp" is-config="true" duration-ms="0" started-at="2018-12-12T02:55:23Z" finished-at="2018-12-12T02:55:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[localhost]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[unknown error: failed to change window state to maximized, current state is minimized
  (Session info: chrome=70.0.3538.110)
  (Driver info: chromedriver=2.44.609538 (b655c5a60b0b544917107a59d4153d4bf78e1b90),platform=Windows NT 10.0.17134 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:13:22.693Z'
System info: host: 'SACHIN', ip: '192.168.0.9', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_91'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.44.609538 (b655c5a60b0b54..., userDataDir: C:\Users\Sachin\AppData\Loc...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:49606}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 70.0.3538.110, webStorageEnabled: true}
Session ID: c14d5544a878227864e38b7e76ae8765]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: unknown error: failed to change window state to maximized, current state is minimized
  (Session info: chrome=70.0.3538.110)
  (Driver info: chromedriver=2.44.609538 (b655c5a60b0b544917107a59d4153d4bf78e1b90),platform=Windows NT 10.0.17134 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:13:22.693Z'
System info: host: 'SACHIN', ip: '192.168.0.9', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_91'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.44.609538 (b655c5a60b0b54..., userDataDir: C:\Users\Sachin\AppData\Loc...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:49606}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 70.0.3538.110, webStorageEnabled: true}
Session ID: c14d5544a878227864e38b7e76ae8765
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:605)
	at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:833)
	at generic.BaseTest.openApp(BaseTest.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:589)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method status="SKIP" signature="validEmail()[pri:1, instance:script.Valid_Email_TC1@59fa1d9b]" name="validEmail" duration-ms="8" started-at="2018-12-12T02:56:07Z" finished-at="2018-12-12T02:56:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validEmail -->
        <test-method status="PASS" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script.Valid_Email_TC1@59fa1d9b]" name="closeApp" is-config="true" duration-ms="1217" started-at="2018-12-12T02:56:07Z" finished-at="2018-12-12T02:56:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validEmail status=SKIP method=Valid_Email_TC1.validEmail()[pri:1, instance:script.Valid_Email_TC1@59fa1d9b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[TestName: validEmail Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- script.Valid_Email_TC1 -->
      <class name="script.RegisterAfterSignout_TC3">
        <test-method status="PASS" signature="openApp(java.lang.String, java.lang.String)[pri:0, instance:script.RegisterAfterSignout_TC3@4501b7af]" name="openApp" is-config="true" duration-ms="43055" started-at="2018-12-12T02:56:51Z" finished-at="2018-12-12T02:57:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[localhost]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method status="SKIP" signature="regAfterSignOut()[pri:3, instance:script.RegisterAfterSignout_TC3@4501b7af]" name="regAfterSignOut" duration-ms="4" started-at="2018-12-12T02:57:34Z" finished-at="2018-12-12T02:57:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- regAfterSignOut -->
        <test-method status="PASS" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script.RegisterAfterSignout_TC3@4501b7af]" name="closeApp" is-config="true" duration-ms="1227" started-at="2018-12-12T02:57:34Z" finished-at="2018-12-12T02:57:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=regAfterSignOut status=SKIP method=RegisterAfterSignout_TC3.regAfterSignOut()[pri:3, instance:script.RegisterAfterSignout_TC3@4501b7af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[TestName: regAfterSignOut Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- script.RegisterAfterSignout_TC3 -->
      <class name="script.Create_LLR_Request_TC9">
        <test-method status="PASS" signature="openApp(java.lang.String, java.lang.String)[pri:0, instance:script.Create_LLR_Request_TC9@26653222]" name="openApp" is-config="true" duration-ms="40444" started-at="2018-12-12T03:02:46Z" finished-at="2018-12-12T03:03:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[localhost]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method status="SKIP" signature="create_LLR_Request()[pri:9, instance:script.Create_LLR_Request_TC9@26653222]" name="create_LLR_Request" duration-ms="4" started-at="2018-12-12T03:03:26Z" finished-at="2018-12-12T03:03:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- create_LLR_Request -->
        <test-method status="PASS" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script.Create_LLR_Request_TC9@26653222]" name="closeApp" is-config="true" duration-ms="1226" started-at="2018-12-12T03:03:26Z" finished-at="2018-12-12T03:03:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=create_LLR_Request status=SKIP method=Create_LLR_Request_TC9.create_LLR_Request()[pri:9, instance:script.Create_LLR_Request_TC9@26653222] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[TestName: create_LLR_Request Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- script.Create_LLR_Request_TC9 -->
      <class name="script.View_LLR_List_TC13">
        <test-method status="PASS" signature="openApp(java.lang.String, java.lang.String)[pri:0, instance:script.View_LLR_List_TC13@59f99ea]" name="openApp" is-config="true" duration-ms="40672" started-at="2018-12-12T03:05:32Z" finished-at="2018-12-12T03:06:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[localhost]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method status="SKIP" signature="view_LLR_List()[pri:13, instance:script.View_LLR_List_TC13@59f99ea]" name="view_LLR_List" duration-ms="4" started-at="2018-12-12T03:06:12Z" finished-at="2018-12-12T03:06:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- view_LLR_List -->
        <test-method status="PASS" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script.View_LLR_List_TC13@59f99ea]" name="closeApp" is-config="true" duration-ms="1148" started-at="2018-12-12T03:06:12Z" finished-at="2018-12-12T03:06:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=view_LLR_List status=SKIP method=View_LLR_List_TC13.view_LLR_List()[pri:13, instance:script.View_LLR_List_TC13@59f99ea] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[TestName: view_LLR_List Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- script.View_LLR_List_TC13 -->
      <class name="script.PaymentWithPaypal_TC8">
        <test-method status="PASS" signature="openApp(java.lang.String, java.lang.String)[pri:0, instance:script.PaymentWithPaypal_TC8@3ffc5af1]" name="openApp" is-config="true" duration-ms="41656" started-at="2018-12-12T03:00:35Z" finished-at="2018-12-12T03:01:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[localhost]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method status="SKIP" signature="paymentWithPaypal()[pri:8, instance:script.PaymentWithPaypal_TC8@3ffc5af1]" name="paymentWithPaypal" duration-ms="4" started-at="2018-12-12T03:01:17Z" finished-at="2018-12-12T03:01:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- paymentWithPaypal -->
        <test-method status="PASS" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script.PaymentWithPaypal_TC8@3ffc5af1]" name="closeApp" is-config="true" duration-ms="1166" started-at="2018-12-12T03:01:17Z" finished-at="2018-12-12T03:01:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=paymentWithPaypal status=SKIP method=PaymentWithPaypal_TC8.paymentWithPaypal()[pri:8, instance:script.PaymentWithPaypal_TC8@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[TestName: paymentWithPaypal Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- script.PaymentWithPaypal_TC8 -->
      <class name="script.CMS_Auto">
        <test-method status="PASS" signature="openApp(java.lang.String, java.lang.String)[pri:0, instance:script.CMS_Auto@5e5792a0]" name="openApp" is-config="true" duration-ms="36327" started-at="2018-12-12T03:01:18Z" finished-at="2018-12-12T03:01:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[localhost]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method status="PASS" signature="creationOfDDM()[pri:0, instance:script.CMS_Auto@5e5792a0]" name="creationOfDDM" duration-ms="50237" started-at="2018-12-12T03:01:54Z" finished-at="2018-12-12T03:02:44Z">
          <reporter-output>
            <line>
              <![CDATA[Test: creationOfDDM is Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- creationOfDDM -->
        <test-method status="PASS" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script.CMS_Auto@5e5792a0]" name="closeApp" is-config="true" duration-ms="1173" started-at="2018-12-12T03:02:44Z" finished-at="2018-12-12T03:02:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=creationOfDDM status=SUCCESS method=CMS_Auto.creationOfDDM()[pri:0, instance:script.CMS_Auto@5e5792a0] output=Test: creationOfDDM is Pass]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[TestName: creationOfDDM Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- script.CMS_Auto -->
      <class name="script.Create_LLR_Request_PNG_TC11">
        <test-method status="PASS" signature="openApp(java.lang.String, java.lang.String)[pri:0, instance:script.Create_LLR_Request_PNG_TC11@68c4039c]" name="openApp" is-config="true" duration-ms="40182" started-at="2018-12-12T03:04:08Z" finished-at="2018-12-12T03:04:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[localhost]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method status="SKIP" signature="create_LLR_png()[pri:11, instance:script.Create_LLR_Request_PNG_TC11@68c4039c]" name="create_LLR_png" duration-ms="0" started-at="2018-12-12T03:04:49Z" finished-at="2018-12-12T03:04:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- create_LLR_png -->
        <test-method status="PASS" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script.Create_LLR_Request_PNG_TC11@68c4039c]" name="closeApp" is-config="true" duration-ms="1204" started-at="2018-12-12T03:04:49Z" finished-at="2018-12-12T03:04:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=create_LLR_png status=SKIP method=Create_LLR_Request_PNG_TC11.create_LLR_png()[pri:11, instance:script.Create_LLR_Request_PNG_TC11@68c4039c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[TestName: create_LLR_png Status: Pass]]>
            </line>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- script.Create_LLR_Request_PNG_TC11 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
