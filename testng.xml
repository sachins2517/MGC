<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd">
<suite name="Suite">
  <test name="Test">
    <classes>
      <class name="script.Valid_Email_TC1"/>
      <class name="script.Invalid_Email_TC2"/>
      <class name="script.RegisterAfterSignout_TC3"/>
      <class name="script.Clinician_Reg_TC4"/>
      <class name="script.LabAdmin_Reg_TC5"/>
      <class name="script.Others_Reg_TC6"/>
  	  <class name="script.PaymentWithCard_TC7"/>
      <class name="script.PaymentWithPaypal_TC8"/>
      <class name="script.CMS_Auto"/>
      <class name="script.Create_LLR_Request_TC9"/>
      <class name="script.Create_LLR_Request_JPG_TC10"/>
      <class name="script.Create_LLR_Request_PNG_TC11"/>
      <class name="script.Create_LLR_Request_PDF_TC12"/>
      <class name="script.View_LLR_List_TC13"/>
    </classes>
  </test> <!-- Test -->
</suite> <!-- Suite -->



<!--  

package Material;

import org.testng.IRetryAnalyzer;
import org.testng.ITestResult;

public class RetryFailedTestCases implements IRetryAnalyzer {
    private int retryCnt = 0;
    //You could mentioned maxRetryCnt (Maximiun Retry Count) as per your requirement. Here I took 2, If any failed testcases then it runs two times
    private int maxRetryCnt = 2;
    
    //This method will be called everytime a test fails. It will return TRUE if a test fails and need to be retried, else it returns FALSE
    public boolean retry(ITestResult result) {
        if (retryCnt < maxRetryCnt) {
            System.out.println("Retrying " + result.getName() + " again and the count is " + (retryCnt+1));
            retryCnt++;
            return true;
        }
        return false;
    }
   
} -->
